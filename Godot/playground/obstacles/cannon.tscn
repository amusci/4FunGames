[gd_scene load_steps=5 format=3 uid="uid://3x22w68bgrw0"]

[ext_resource type="Texture2D" uid="uid://jox2gkmautm6" path="res://art/homegrown/new cannon.png" id="1_vywdv"]
[ext_resource type="AudioStream" uid="uid://dvw2jgq138ku6" path="res://music/SFX/esm_8bit_explosion_medium_bomb_boom_blast_cannon_retro_old_school_classic_cartoon.mp3" id="2_uj80a"]

[sub_resource type="GDScript" id="GDScript_tpt0a"]
script/source = "extends Node2D

@onready var main = get_tree().get_root().get_node(level)
@onready var projectile = load(\"res://obstacles/egg_projectile.tscn\")
@onready var shoot_speed = $shoot_speed
@onready var shoot_offset = $shoot_offset

@onready var explosion = $explosion


@export var level: String
#@export var rotation_of_cannon: int = 45
@export var direction_of_bullet : int = 0
@export var shot_speed : float = 0
@export var shot_offset : int = 0
@export var egg_lifetime : int = 10

# 0 = right
# 45 = down right
# 90 = down
# 135 = down left
# 180 = left
# 225 = up left
# 270 = up
# 315 = up right
# 360 = right
# USE THIS TO CREATE YOUR OWN ANGLES. ANY NUMBER BETWEEN 0-360 IS USABLE


func _ready():
	shoot_offset.wait_time = shot_offset
	shoot_offset.start()

func _physics_process(delta):
	pass
	#rotation_degrees += rotation_of_cannon * delta # This would make the cannon rotate
	#shoot_speed.wait_time
	
func angle_to_vector(angle_deg):
	var angle_rad = deg_to_rad(angle_deg)
	return Vector2(cos(angle_rad), sin(angle_rad)).normalized()

func shoot():
	var proj = projectile.instantiate() # Allow us to use our projectile
	proj.lifetime = egg_lifetime
	proj.dir = angle_to_vector(direction_of_bullet)
	proj.spawnPos = global_position + Vector2(0,0) # Spawn position
	proj.spawnRot = rotation # Set rotation of projectile
	#proj.zdex = z_index - 1 # Might do something for this idk
	main.add_child.call_deferred(proj) # Spawn in the projectile
	
	explosion.play() # Play explosion SFX

func _on_shoot_speed_timeout():
	shoot() # 1 Second

func _on_life_time_timeout():
	queue_free() # Goodbye

func _on_shoot_offset_timeout():
	shoot_speed.wait_time = shot_speed # Grab the offset
	shoot_speed.start() # Set the offset
	shoot()  # Shoot once offset finished
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ic5ve"]
size = Vector2(16, 16)

[node name="Cannon" type="Node2D"]
script = SubResource("GDScript_tpt0a")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_vywdv")

[node name="shoot_speed" type="Timer" parent="."]
process_callback = 0
wait_time = 2.0
autostart = true

[node name="shoot_offset" type="Timer" parent="."]
process_callback = 0
one_shot = true

[node name="explosion" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("2_uj80a")
volume_db = -20.0
pitch_scale = 2.0
attenuation = 11.3137

[node name="StaticBody2D" type="StaticBody2D" parent="."]
collision_layer = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
shape = SubResource("RectangleShape2D_ic5ve")

[connection signal="timeout" from="shoot_speed" to="." method="_on_shoot_speed_timeout"]
[connection signal="timeout" from="shoot_offset" to="." method="_on_shoot_offset_timeout"]
